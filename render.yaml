services:
  - type: web
    name: spotify-swipe-backend
    runtime: python
    buildCommand: |
      cd server &&
      pip install gunicorn &&
      pip install -r render-requirements.txt
    startCommand: |
      cd server &&
      gunicorn app:app \
        --bind 0.0.0.0:$PORT \
        --workers 1 \
        -k gthread \
        --threads 4 \
        --timeout 120
    envVars:
      - key: FLASK_ENV
        value: production

      # Explicit frontend/backend envs (no extra spaces)
      - key: FRONTEND_URL
        value: "https://tune-swipe.vercel.app"
      - key: BACKEND_URL
        value: "https://tune-swipe.onrender.com"
      - key: IS_LOCAL
        value: "production"

      # Spotify credentials (sourced from Render service secrets as before)
      - key: SPOTIFY_CLIENT_ID
        fromService:
          name: tune-swipe-backend
          type: env
          key: SPOTIFY_CLIENT_ID
      - key: SPOTIFY_CLIENT_SECRET
        fromService:
          name: tune-swipe-backend
          type: env
          key: SPOTIFY_CLIENT_SECRET

      # Database / Railway vars (sourced from existing service)
      - key: RLWY_HOST
        fromService:
          name: tune-swipe-backend
          type: env
          key: RLWY_HOST
      - key: RLWY_USER
        fromService:
          name: tune-swipe-backend
          type: env
          key: RLWY_USER
      - key: RLWY_PASS
        fromService:
          name: tune-swipe-backend
          type: env
          key: RLWY_PASS
      - key: RLWY_DB
        fromService:
          name: tune-swipe-backend
          type: env
          key: RLWY_DB
      - key: RLWY_PORT
        fromService:
          name: tune-swipe-backend
          type: env
          key: RLWY_PORT